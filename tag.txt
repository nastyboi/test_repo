Please find the notes below:

# set up ENV's
export NEW_DIR=/home/lalsalman/tag_checkouts/new
export LEGACY_DIR=/home/lalsalman/tag_checkouts/legacy
export PATH=$PATH:$HOME/bin:$HOME/123-utilities/bin/

# Example variables.
live_tag=tag-<date_old>   # The tag that is currently live
new_tag=tag-<date_new>  # The tag that is to be cut for tomorrow

# Make sure you have the git-trello-branches.sh script setup:
mkdir ~/123-utilities

git clone git@git.ld4.webfusion.com:123-reg/123-utilities.git ~/123-utilities

# Make sure you have the two directories checkout on legacy and new
mkdir -p ~/tag_checkouts/legacy
mkdir -p ~/tag_checkouts/new
cd ~/tag_checkouts/legacy
git clone git@git.ld4.webfusion.com:123-reg/123-reg-legacy.git ~/tag_checkouts/legacy
cd ~/tag_checkouts/new
git clone git@git.ld4.webfusion.com:123-reg/123-reg-new.git ~/tag_checkouts/new

# Create the tag which is an exact copy of master atm
cd ~/tag_checkouts/legacy
git pull
git checkout -b tag-<date>
git push origin tag-<date>
git branch --set-upstream-to=origin/tag-<date> tag-<date>

cd ~/tag_checkouts/new
git pull
git checkout -b tag-<date>
git push origin tag-<date>
git branch --set-upstream-to=origin/tag-<date> tag-<date>

# Run the script to merge in all the branches found on Trello
cd ~/123-utilities/bin
./git-trello-branches.sh tag-<date>
# --testing does things marked as testing --skip saves you having to press enter between branches
# ./git-trello-branches.sh tag-20141007a --testing --skip

# make sure NEW_DIR and LEGACY_DIR are set as top of page
./bin/dev/update_static_assets.sh
./bin/dev/make-aliases


# steps of sorting a conflict:
git checkout --theirs templates/bootstrap/header.tmpl
git checkout --ours templates/bootstrap/header.tmpl
# or you open in vim and sort if it's a mixture of both
git add templates/bootstrap/header.tmpl
git commit

# After the tag has been updated correctly with them all, release to
staging like so:
cd $NEW_DIR
bin/utils/tag_release/update_servers.pl tag-<date> staging rollout

ssh root@www05
/etc/init.d/httpd graceful
exit

# Create change logs:
git checkout master
git pull
git checkout tag-<date_new>
git pull

cd ~/123-utilities/bin/
./gitlogs.pl --email tag-<date_old> tag-<date_new>


# dont need this below, do above now
# git log --stat tag-<date_old>..tag-<date_new> > ~/new-tag-<date_new>.txt
# e.g. do for both legacy and new
# git log --stat tag-<date_old>..tag-<date_new> > ~/new-tag-<date_new>.txt
# git log --stat tag-<date_old>..tag-<date_new> > ~/legacy-tag-<date_new>.txt


# After tag has been created and all the branches have been merged in,
email _QA, Louise

# Throughout day run:
# git-merge-in.sh <tag-to> <tag-from>
git-merge-in.sh tag-20140729 FB42121
git-merge-in.sh tag-<date> <whatever_branch>
bin/utils/tag_release/update_servers.pl tag-<date> staging rollout

# When everything is ready to go live, run:
bin/utils/tag_release/update_servers.pl tag-<date> live rollout

# Produce final change log for the final email to
123reg_tagrelease@webfusion.com

# change new and legacy back ...
export NEW_DIR=/home/lalsalman/new/src
export LEGACY_DIR=/home/lalsalman/legacy

--- 

Extra's fixes for gTLD around trademark_check_end and launch_date gav has told me to run in the past, obviously dates and ext_id would be different as its a new extension :

update domain_extension_attributes set trademark_check_end = '2015-05-18 00:00:00' where extension_id = 1130;

update domain_extension_attributes set launch_date = '2015-02-25 11:30:00' where extension_id = 1130;
